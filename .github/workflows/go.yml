name: Build, Test and Release

on:
  push:
    branches:
      - main
    tags:
      - v*.*.*
  pull_request:
    branches:
      - main

jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    env:
      GO_LDFLAGS: "-w -s"
      GO11MODULE: "on"
      GINKGO_FLAGS: "--randomizeAllSpecs --randomizeSuites --failOnPending --trace --race --progress --compilers=2 --nodes=2"
      VERSION: ${{ startsWith(github.ref, 'refs/tags/v') && github.ref_name || format('gh-action-{0}', github.sha) }}

    steps:
      - uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2

      - name: Setup Cache
        uses: actions/cache@937d24475381cd9c75ae6db12cb4e79714b926ed # renovate: tag=v2
        with:
          path: |
            ~/go/pkg
          key: ${{ runner.os }}-build-${{ runner.arch }}

      - name: Set up Go
        uses: actions/setup-go@424fc82d43fa5a37540bae62709ddcc23d9520d4 # renovate: tag=v2
        with:
          go-version: 1.17

      - name: Build Binary
        run: |
          make generate
          if ! git diff --exit-code --name-only; then
            git diff
            echo 'Run "make generate" and add generated changes to this PR'
            exit 1
          fi
          # Build kubecfg
          make all

      - name: Info Binary
        run: |
          #ldd ./kubecfg || otool -L ./kubecfg # What's the purpose of this ? it currently fail since we don't produce a dynamic executable
          ./kubecfg help
          ./kubecfg version

      - name: Test Binary
        run: |
          make test
          make vet

      # Only run integration on linux matrix job
      - name: Create k8s Kind Cluster
        uses:  engineerd/setup-kind@v0.5.0
        if: matrix.os == 'ubuntu-latest'
        with:
          version: "v0.11.1"
          # NOTE - Starting with k8s 1.20 a CM is created in every namespace  called "kube-root-ca.crt" which breaks the "Simple Delete" integration test
          image: "kindest/node:v1.19.11@sha256:07db187ae84b4b7de440a73886f008cf903fcf5764ba8106a9fd5243d6f32729"

      - name: Integration Testing
        if: matrix.os == 'ubuntu-latest'
        run: |
          go install github.com/onsi/ginkgo/ginkgo@$(go list -f '{{.Version}}' -m github.com/onsi/ginkgo)
          make integrationtest GINKGO="ginkgo $GINKGO_FLAGS"

      - name: Upload kubecfg artifact
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2 # renovate: tag=v2
        with:
          name: kubecfg_${{ runner.os }}_${{ runner.arch }}
          path: kubecfg
          retention-days: 5

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e # renovate: tag=v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: create_release
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download kubecfg artifact
        uses: actions/download-artifact@f023be2c48cc18debc3bacd34cb396e0295e2869 # renovate: tag=v2
        with:
          name: kubecfg_${{ runner.os }}_${{ runner.arch }}
      - name: Upload assets
        id: upload-release-asset
        uses: actions/upload-release-asset@e8f9f06c4b078e705bd2ea027f0926603fc9b4d5 # renovate: tag=v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: kubecfg
          asset_name: kubecfg_${{ runner.os }}_${{ runner.arch }}
          asset_content_type: application/octet-stream

